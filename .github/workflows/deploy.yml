name: Deploy n8n Workflows

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Deploy each workflow in /output
        run: |
          for file in output/*.json; do
            echo "üì§ Processing $file..."

            # Extract workflow name from JSON
            name=$(jq -r '.name' "$file")

            echo "üîç Checking if workflow '$name' exists..."
            response=$(curl -s -X GET "${{ secrets.N8N_URL }}/api/v1/workflows" \
              -H "accept: application/json" \
              -H "X-N8N-API-KEY: ${{ secrets.N8N_API_KEY }}")

            # Find matching workflow by name
            id=$(echo "$response" | jq -r --arg name "$name" '.data[] | select(.name == $name) | .id')

            if [ -n "$id" ]; then
              echo "‚ôªÔ∏è Updating existing workflow '$name' (id: $id)..."
              curl -s -X PUT "${{ secrets.N8N_URL }}/api/v1/workflows/$id" \
                -H "accept: application/json" \
                -H "Content-Type: application/json" \
                -H "X-N8N-API-KEY: ${{ secrets.N8N_API_KEY }}" \
                --data-binary "@$file"
            else
              echo "‚ú® Creating new workflow '$name'..."
              curl -s -X POST "${{ secrets.N8N_URL }}/api/v1/workflows" \
                -H "accept: application/json" \
                -H "Content-Type: application/json" \
                -H "X-N8N-API-KEY: ${{ secrets.N8N_API_KEY }}" \
                --data-binary "@$file"
            fi
          done
